# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from uk.data.item.stock import ItemStock_pb2 as uk_dot_data_dot_item_dot_stock_dot_ItemStock__pb2
from uk.networking.requests.item.stock import GetStockInfoRequest_pb2 as uk_dot_networking_dot_requests_dot_item_dot_stock_dot_GetStockInfoRequest__pb2


class GetStockInfoServiceStub(object):
    """
    	Service for getting item info
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStockInfo = channel.unary_stream(
                '/TeamsonUK.Usability.Networking.Services.Item.Stock.GetStockInfoService/GetStockInfo',
                request_serializer=uk_dot_networking_dot_requests_dot_item_dot_stock_dot_GetStockInfoRequest__pb2.GetStockInfoRequest.SerializeToString,
                response_deserializer=uk_dot_data_dot_item_dot_stock_dot_ItemStock__pb2.ItemStock.FromString,
                )


class GetStockInfoServiceServicer(object):
    """
    	Service for getting item info
    """

    def GetStockInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GetStockInfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStockInfo': grpc.unary_stream_rpc_method_handler(
                    servicer.GetStockInfo,
                    request_deserializer=uk_dot_networking_dot_requests_dot_item_dot_stock_dot_GetStockInfoRequest__pb2.GetStockInfoRequest.FromString,
                    response_serializer=uk_dot_data_dot_item_dot_stock_dot_ItemStock__pb2.ItemStock.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TeamsonUK.Usability.Networking.Services.Item.Stock.GetStockInfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GetStockInfoService(object):
    """
    	Service for getting item info
    """

    @staticmethod
    def GetStockInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TeamsonUK.Usability.Networking.Services.Item.Stock.GetStockInfoService/GetStockInfo',
            uk_dot_networking_dot_requests_dot_item_dot_stock_dot_GetStockInfoRequest__pb2.GetStockInfoRequest.SerializeToString,
            uk_dot_data_dot_item_dot_stock_dot_ItemStock__pb2.ItemStock.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
