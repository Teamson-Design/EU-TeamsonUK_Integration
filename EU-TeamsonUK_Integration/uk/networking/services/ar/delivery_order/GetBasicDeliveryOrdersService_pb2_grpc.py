# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from uk.data.ar.delivery_order import BasicDeliveryOrder_pb2 as uk_dot_data_dot_ar_dot_delivery__order_dot_BasicDeliveryOrder__pb2
from uk.networking.requests.ar.delivery_order import GetBasicDeliveryOrdersRequest_pb2 as uk_dot_networking_dot_requests_dot_ar_dot_delivery__order_dot_GetBasicDeliveryOrdersRequest__pb2


class GetBasicDeliveryOrdersServiceStub(object):
    """
    	Service for getting basic Delivery orders
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBasicDeliveryOrders = channel.unary_stream(
                '/TeamsonUK.Usability.Networking.Services.AR.DeliveryOrder.GetBasicDeliveryOrdersService/GetBasicDeliveryOrders',
                request_serializer=uk_dot_networking_dot_requests_dot_ar_dot_delivery__order_dot_GetBasicDeliveryOrdersRequest__pb2.GetBasicDeliveryOrdersRequest.SerializeToString,
                response_deserializer=uk_dot_data_dot_ar_dot_delivery__order_dot_BasicDeliveryOrder__pb2.BasicDeliveryOrder.FromString,
                )


class GetBasicDeliveryOrdersServiceServicer(object):
    """
    	Service for getting basic Delivery orders
    """

    def GetBasicDeliveryOrders(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GetBasicDeliveryOrdersServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBasicDeliveryOrders': grpc.unary_stream_rpc_method_handler(
                    servicer.GetBasicDeliveryOrders,
                    request_deserializer=uk_dot_networking_dot_requests_dot_ar_dot_delivery__order_dot_GetBasicDeliveryOrdersRequest__pb2.GetBasicDeliveryOrdersRequest.FromString,
                    response_serializer=uk_dot_data_dot_ar_dot_delivery__order_dot_BasicDeliveryOrder__pb2.BasicDeliveryOrder.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TeamsonUK.Usability.Networking.Services.AR.DeliveryOrder.GetBasicDeliveryOrdersService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GetBasicDeliveryOrdersService(object):
    """
    	Service for getting basic Delivery orders
    """

    @staticmethod
    def GetBasicDeliveryOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TeamsonUK.Usability.Networking.Services.AR.DeliveryOrder.GetBasicDeliveryOrdersService/GetBasicDeliveryOrders',
            uk_dot_networking_dot_requests_dot_ar_dot_delivery__order_dot_GetBasicDeliveryOrdersRequest__pb2.GetBasicDeliveryOrdersRequest.SerializeToString,
            uk_dot_data_dot_ar_dot_delivery__order_dot_BasicDeliveryOrder__pb2.BasicDeliveryOrder.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
